var u=Object.defineProperty;var f=(o,t,e)=>t in o?u(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var c=(o,t,e)=>f(o,typeof t!="symbol"?t+"":t,e);import{emailReadService as g}from"./emailReadService-DUeJ1niY.js";import"./index-Dh14THqw.js";class h{constructor(){c(this,"settings");c(this,"intervalId",null);c(this,"isRunning",!1);this.settings=this.loadSettings()}loadSettings(){const t=localStorage.getItem("nyra_email_notifications");return t?{...this.getDefaultSettings(),...JSON.parse(t)}:this.getDefaultSettings()}getDefaultSettings(){return{enabled:!1,frequency:5,checkUnreadOnly:!0,importantOnly:!1,workHoursOnly:!1,soundEnabled:!0,lastCheckTime:new Date,lastEmailCount:0}}saveSettings(){localStorage.setItem("nyra_email_notifications",JSON.stringify(this.settings))}async configureNotifications(t){try{switch(t.operation){case"enable":return this.settings.enabled=!0,await this.startNotifications(),{success:!0,message:"Notifiche email attivate"};case"disable":return this.settings.enabled=!1,this.stopNotifications(),{success:!0,message:"Notifiche email disattivate"};case"configure":return t.frequency!==void 0&&(this.settings.frequency=t.frequency),t.checkUnreadOnly!==void 0&&(this.settings.checkUnreadOnly=t.checkUnreadOnly),t.importantOnly!==void 0&&(this.settings.importantOnly=t.importantOnly),t.workHoursOnly!==void 0&&(this.settings.workHoursOnly=t.workHoursOnly),t.soundEnabled!==void 0&&(this.settings.soundEnabled=t.soundEnabled),this.saveSettings(),this.settings.enabled&&await this.restartNotifications(),{success:!0,message:"Impostazioni notifiche aggiornate"};default:return{success:!1,message:"Operazione non riconosciuta"}}}catch(e){return console.error("Error configuring notifications:",e),{success:!1,message:"Errore nella configurazione"}}}async startNotifications(){this.isRunning||(this.isRunning=!0,this.settings.enabled=!0,this.saveSettings(),await this.checkNewEmails(),this.intervalId=setInterval(async()=>{await this.checkNewEmails()},this.settings.frequency*60*1e3),console.log(`ðŸ“§ Email notifications started - checking every ${this.settings.frequency} minutes`))}stopNotifications(){this.intervalId&&(clearInterval(this.intervalId),this.intervalId=null),this.isRunning=!1,this.settings.enabled=!1,this.saveSettings(),console.log("ðŸ“§ Email notifications stopped")}async restartNotifications(){this.stopNotifications(),await this.startNotifications()}async checkNewEmails(){try{if(this.settings.workHoursOnly&&!this.isWorkHours())return;const t={action:"read-email",type:this.settings.checkUnreadOnly?"unread":"latest",count:10},e=await g.readEmails(t);if(!e.success||e.emails.length===0)return;let i=e.emails;this.settings.importantOnly&&(i=this.filterImportantEmails(e.emails));const s=i.length,n=this.settings.lastEmailCount||0;if(s>n){const a=s-n;await this.showNotification(a,i.slice(0,3))}this.settings.lastEmailCount=s,this.settings.lastCheckTime=new Date,this.saveSettings()}catch(t){console.error("Error checking new emails:",t)}}filterImportantEmails(t){return t.filter(e=>{const i=e.from.toLowerCase(),s=e.subject.toLowerCase(),a=["work","job","boss","manager","hr","admin"].some(r=>i.includes(r)),l=["urgente","importante","riunione","meeting","deadline","scadenza"].some(r=>s.includes(r)||e.snippet.toLowerCase().includes(r));return a||l})}isWorkHours(){const t=new Date,e=t.getHours(),i=t.getDay();return i>=1&&i<=5&&e>=9&&e<=18}async showNotification(t,e){if(Notification.permission==="default"&&await Notification.requestPermission(),Notification.permission!=="granted")return;const i=`ðŸ“§ ${t} nuova email${t>1?"i":""}`;let s="";e.length>0&&(s=e.map(a=>`â€¢ ${a.subject} (da ${a.from})`).join(`
`),t>3&&(s+=`
... e altre ${t-3} email`));const n=new Notification(i,{body:s,icon:"/email-icon.png",tag:"email-notification",requireInteraction:!1});this.settings.soundEnabled&&this.playNotificationSound(),setTimeout(()=>{n.close()},5e3),n.onclick=()=>{window.focus(),n.close()}}playNotificationSound(){try{const t=new(window.AudioContext||window.webkitAudioContext),e=t.createOscillator(),i=t.createGain();e.connect(i),i.connect(t.destination),e.frequency.setValueAtTime(800,t.currentTime),i.gain.setValueAtTime(.1,t.currentTime),e.start(t.currentTime),e.stop(t.currentTime+.2)}catch(t){console.warn("Could not play notification sound:",t)}}getSettings(){return{...this.settings}}getStatus(){return{enabled:this.settings.enabled,isRunning:this.isRunning,lastCheck:this.settings.lastCheckTime}}}const p=new h;export{h as EmailNotificationService,p as emailNotificationService};
