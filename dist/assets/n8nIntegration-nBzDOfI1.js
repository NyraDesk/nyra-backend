const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./index-Dh14THqw.js","./index-DWpkQKaE.css"])))=>i.map(i=>d[i]);
import{_ as E}from"./index-Dh14THqw.js";const g=!0;function I(a){try{return JSON.parse(a)}catch{return null}}async function p(a,i,S){var u,m,c,f,t,n,o;const N=O(a);if(!N)return{success:!1,error:"Impossibile estrarre informazioni calendario dal messaggio"};const w=(()=>{try{const e=localStorage.getItem("nyra_user");return e&&JSON.parse(e).email||null}catch(e){return console.warn("[NYRA] Errore nel recupero email utente:",e),null}})(),l={title:N.summary,summary:N.summary,startISO:N.startISO,endISO:N.endISO,user_id:w};{const e=getN8NWebhookUrl();console.log("[NYRA] Creating reminder via n8n:",e),console.log("[NYRA] Payload:",l)}if((u=window.electronAPI)!=null&&u.n8nCreateReminder)try{const e=await window.electronAPI.n8nCreateReminder(l);if(e.ok===!0||e.status>=200&&e.status<300){const s=e.json??I(e.body),r={status:e.status,id:s==null?void 0:s.id,start:(m=s==null?void 0:s.start)==null?void 0:m.dateTime,htmlLink:s==null?void 0:s.htmlLink};return console.log("[NYRA][n8n OK]",r),{success:!0,data:s,eventLink:(s==null?void 0:s.htmlLink)||(s==null?void 0:s.id)}}return console.warn("[NYRA][n8n FAIL]",{status:e.status,body:(c=e.body)==null?void 0:c.slice(0,500)}),{success:!1,error:`n8n error: status ${e.status}`}}catch(e){return console.log("[NYRA] n8n IPC ERROR:",e==null?void 0:e.message),{success:!1,error:(e==null?void 0:e.message)??"IPC error"}}try{getN8NWebhookUrl(),console.log("[NYRA][REQUEST URL]",webhookUrl);let e;try{e=JSON.stringify(l),console.log("📤 n8n Integration - JSON validation: ✅ Valid"),console.log("📤 n8n Integration - JSON length:",e.length,"characters")}catch(h){throw console.error("📤 n8n Integration - JSON validation: ❌ Invalid JSON:",h),new Error("Invalid JSON payload")}g&&(console.log("[N8N][REQUEST] Final URL:",webhookUrl),console.log("[N8N][REQUEST] Body:",l));const s=await fetch(webhookUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:e}),r=await s.text().catch(()=>"");if(g&&(console.log("[N8N][RESPONSE] status:",s.status,s.statusText),console.log("[N8N][RESPONSE] raw:",r)),!s.ok){const h=r.slice(0,200),y=`n8n error ${s.status}: ${h}`;throw g&&console.log("[NYRA] n8n FAILED:",y),new Error(y)}let d;try{d=JSON.parse(r)}catch{d={message:"Non-JSON response from n8n",raw:r}}if(s.ok)try{const h=await s.json();if(h.success===!1)throw new Error(h.error||"n8n responded with success=false");return{success:!0,data:h}}catch{return{success:!0,data:null}}else throw new Error(`n8n failed: ${s.status} ${s.statusText}`)}catch(e){console.log("[NYRA] n8n FAILED:",e==null?void 0:e.message);const s=(f=window==null?void 0:window.ElectronAPI)==null?void 0:f.n8nCreateReminder;if(s)try{g&&console.log("[NYRA] Fallback via IPC main process");const r=getN8NWebhookUrl(),d=await s({summary:l.summary,startISO:l.startISO,endISO:l.endISO},r);return d.ok&&((t=d.data)!=null&&t.ok)?(g&&console.log("[NYRA] n8n OK via IPC fallback"),{success:!0,data:d.data,eventLink:d.data.eventLink}):(g&&console.log("[NYRA] n8n FAILED via IPC fallback:",d.status,((n=d.data)==null?void 0:n.message)||"Unknown error"),{success:!1,error:`n8n error: ${((o=d.data)==null?void 0:o.message)||"Unknown error"}`})}catch(r){return console.log("[NYRA] n8n IPC fallback ERROR:",r==null?void 0:r.message),{success:!1,error:(r==null?void 0:r.message)??"IPC fallback error"}}return{success:!1,error:(e==null?void 0:e.message)??"Network error"}}}function O(a){a.toLowerCase();let i="";const S=/alle\s+\d{1,2}(?::\d{2})?\s+(\w+)/i,N=a.match(S);if(N&&N[1])i=N[1].trim();else{const o=a.split(" ").filter(e=>e.trim().length>0);o.length>0&&(i=o[o.length-1].trim())}i.length>0&&(i=i.charAt(0).toUpperCase()+i.slice(1).toLowerCase()),(!i||i.length===0)&&(i="Evento");const R=[/domani\s+(?:alle\s+)?(\d{1,2})(?::(\d{2}))?/i,/alle\s+(\d{1,2})(?::(\d{2}))?/i,/alle\s+(\d{1,2}):(\d{2})/i,/alle\s+(\d{1,2})\.(\d{2})/i,/(\d{1,2}):(\d{2})/i,/(\d{1,2})\.(\d{2})/i,/(\d{1,2})/i];let w=9,l=0,u=!1;for(const o of R){const e=a.match(o);if(e&&(o.source.includes("domani")&&(u=!0),e[1]&&(w=parseInt(e[1])),e[2]&&(l=parseInt(e[2])),w>=0&&w<=23&&l>=0&&l<=59))break}const m=new Date;let c=new Date(m);u&&c.setDate(c.getDate()+1),c.setHours(w,l,0,0),!u&&c<=m&&c.setDate(c.getDate()+1);const f=new Date(c);f.setHours(c.getHours()+1);const t=c.toISOString(),n=f.toISOString();return{summary:i,startISO:t,endISO:n}}async function A(a){var m,c,f;console.log("[NYRA][N8N] Creating calendar event with action:",a);const{pickFinalTitle:i}=await E(async()=>{const{pickFinalTitle:t}=await import("./index-Dh14THqw.js").then(n=>n.c);return{pickFinalTitle:t}},__vite__mapDeps([0,1]),import.meta.url),S=i(a.originalText,a.summary,a.title),R=(()=>{try{const t=localStorage.getItem("nyra_user");return t&&JSON.parse(t).email||null}catch(t){return console.warn("[NYRA] Errore nel recupero email utente:",t),null}})(),l=(()=>{try{if(R){const t=localStorage.getItem(`nyra_oauth_${R}`);if(t){const n=JSON.parse(t);if(new Date(n.expires_at)>new Date)return n.access_token}return null}return null}catch(t){return console.warn("[NYRA] Errore nel recupero access token:",t),null}})(),u={action_type:"calendar",access_token:l,calendar:{title:S,summary:S,description:"Evento creato da NYRA",startISO:a.startISO,endISO:a.endISO},user_id:R};if(console.log("[NYRA][N8N] Sending payload with user_id:",u),console.log("[NYRA][N8N] Access token status:",l?"present":"not found"),u.user_id?console.log("[NYRA][N8N] ✅ user_id presente nel payload:",u.user_id):console.log("[NYRA][N8N] ⚠️ user_id mancante nel payload"),(m=window.electronAPI)!=null&&m.n8nCreateReminder)try{const t=await window.electronAPI.n8nCreateReminder(u);if(t.ok===!0||t.status>=200&&t.status<300){const n=t.json??I(t.body),o={status:t.status,id:n==null?void 0:n.id,start:(c=n==null?void 0:n.start)==null?void 0:c.dateTime,htmlLink:n==null?void 0:n.htmlLink};return console.log("[NYRA][n8n OK]",o),{success:!0,data:n,eventLink:(n==null?void 0:n.htmlLink)||(n==null?void 0:n.id)}}return console.warn("[NYRA][n8n FAIL]",{status:t.status,body:(f=t.body)==null?void 0:f.slice(0,500)}),{success:!1,error:`n8n error: status ${t.status}`}}catch(t){return console.log("[NYRA] n8n IPC ERROR:",t==null?void 0:t.message),{success:!1,error:(t==null?void 0:t.message)??"IPC error"}}try{const t=getN8NWebhookUrl();console.log("[NYRA][REQUEST URL]",t);let n;try{n=JSON.stringify(u),console.log("📤 n8n Email - JSON validation: ✅ Valid"),console.log("📤 n8n Email - JSON length:",n.length,"characters")}catch(r){throw console.error("📤 n8n Email - JSON validation: ❌ Invalid JSON:",r),new Error("Invalid JSON payload")}g&&(console.log("[N8N][REQUEST] Final URL:",t),console.log("[N8N][REQUEST] Body:",u));const o=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:n}),e=await o.text().catch(()=>"");if(g&&(console.log("[N8N][RESPONSE] status:",o.status,o.statusText),console.log("[N8N][RESPONSE] raw:",e)),!o.ok){const r=e.slice(0,200),d=`n8n error ${o.status}: ${r}`;throw g&&console.log("[NYRA] n8n FAILED:",d),new Error(d)}let s;try{s=JSON.parse(e)}catch{s={message:"Non-JSON response from n8n",raw:e}}if(o.ok)try{const r=await o.json();if(r.success===!1)throw new Error(r.error||"n8n responded with success=false");return{success:!0,data:r}}catch{return{success:!0,data:null}}else throw new Error(`n8n failed: ${o.status} ${o.statusText}`)}catch(t){return console.log("[NYRA] n8n fetch ERROR:",t==null?void 0:t.message),{success:!1,error:(t==null?void 0:t.message)??"Errore di connessione con n8n"}}}export{A as createCalendarEvent,p as createReminder};
